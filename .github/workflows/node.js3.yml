# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
    - name: 'Create env file'
      run: |
          touch .env
          echo KAKAOCLIENT=${{ secrets.KAKAOCLIENT }} >> .env
          cat .env
    

#     - name: Setting .env
#       run: |
#           echo "KAKAOCLIENT=${{ secrets.KAKAOCLIENT }}" >> .env
#           echo "NAVERCLIENT=${{ secrets.NAVERCLIENT }}" >> .env
#           echo "NAVERSECRET=${{ secrets.NAVERSECRET }}" >> .env
#           echo "accessKeyId=${{ secrets.accessKeyId }}" >> .env
#           echo "region=${{ secrets.region }}" >> .env
#           echo "JWTSECRETKEY=${{ secrets.JWTSECRETKEY }}" >> .env
#           echo "PORT=${{ secrets.PORT }}" >> .env
#           echo "HTTPSPORT=${{ secrets.HTTPSPORT }}" >> .env
#           echo "CORSPORT=${{ secrets.CORSPORT }}" >> .env
#           echo "NAVERCALLBACKURL=${{ secrets.NAVERCALLBACKURL }}" >> .env
#           echo "KAKAOCALLBACKURL=${{ secrets.KAKAOCALLBACKURL }}" >> .env
#           echo "SWAGGERHOS=${{ secrets.SWAGGERHOS }}" >> .env
#           echo "BUCKETNAME=${{ secrets.BUCKETNAME }}" >> .env
#           echo "MONGODBURL=${{ secrets.MONGODBURL }}" >> .env
#           cat .env
    
    - name: Run scripts in server
      uses: appleboy/ssh-action@master
      with:
          key: ${{ secrets.SSH_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          script: |
            cd Project-BE
            git pull
            sudo pm2 restart app.js
